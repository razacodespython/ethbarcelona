// SPDX-License-Identifier: UNLICENSED
pragma solidity ^0.8.13;

import "forge-std/Test.sol";
import { ZkBallot } from "../src/ZkBallot.sol";

// Merkle root
// Proposal Id: 0
// Vote: 1
// Nullifier

bytes constant proof = hex"22b183de2b67df17a1eb50a081501b3d5791f6092a1edeebfee4afcd25f94c9a24fcde37cae02e895ed49e8fa633b6b72ff57f69cbc40f4ac9b2a1009c7908532a2a1ac38eb7e73ef086f380ca6248e43286e4c0fa52149bceb19dc6a35f28aa125d6f55928672c92b4a11bb81b7a0fa1748446169a99c139ef8605db7babfcf01fa45f9a68a4e4ac42b1bc20a5d9744b3f8e320f08398778e0c00f81a0d75c010ddb48189364ab66c617a1d01b7d33c2f41d589b5e6e3a4cfe7c9096782909e3044c3ad32cb6afb6ca3b875cedbc32e8c8ed9bff10dbbef9b61feda09c235f017cfbcc6baa887293747fb2f314d413302cd817d29dd11ca2eb3c290248ba9572d3c49b50bfdb3dd772e83a8cd3181c6bfeaad2011e64e6b936cec9ec43825d411244cb800fabd23b4a0942a2fb6765e5ee7490e54ad6a6770143112992879d012591086ee707889ca62674c2f8e04903619f5ff57997d801c4466c43c6e95db21fa7a12ae2efdab3bea06bca1e832aa595791cdf3324cdd631a5dacfad3737d2d67d4d0af1752bfc5094f0fca3e1d5bc9bbc432734308988112f7a1805aef411e154176771fe5fbe6fb99587dc01a3a777d94c454a76fd5ca8dba27110fae4527dc27cd3b75f2c5ad7892742a41dafb289a9e158f2e3afaeba3bbadf3ef71fa2636ee4d27b445d0407e345008624c5e577f0742bbdd0c9027ab5df9fbe028ef194818393887c7257154d51de37c5d0e02bfab2d5c9503dd2067e6417e7bf6f621c2b66d7f25dd45a5e4219eec38dac194ec8466b25c4e532b972f2c0cc918bc0a7c5049c7cf242736950ecfc41ddf641c2daba0e0a6154ab5f7c877c73f863a221c3bb6eab84410b5857e956756b1d2a2d870299e9116bd2a919f39c102669e2872f9ed01298656e18bf87d70202105364a2ffd784c03dc4d27de0c9e3df5241b9ccb4aea39c9003065cf728ae45cc191d3eabc17f147fdbeabf4422676a2a50e89b4eda972cbb7579eb8769a8165f1787fdd36be98c0eef857245a80dca8cc28ec6ed53407b69e5ad4f4d5423e189d79ad2646dbfba283b84587e42bd7cc27038f190975777becb12a98a80c765d2ad444cb840b7a522bde0a65c9cf0a28bb095794b65d32cf0a8f8af1bedc58b0d7fdb38c588d5b65b960ed57e9117996441dd9e8f3c3a6aa3146980c89654c927b242106800618e554eab377f5532f018908d7849f361d8a92018e44b5fd347d0f6dc7e87370ea5bff510d421a282b5d920595c7d7c3fe67f4ba682dcfcbf12832cbcf202c4d3deaeea0bec23ed8cd6bb31f3f2d1a2acdd94dded52a10e98b5d2606b46816702aaca2cfb5aeb20912820b257167d6008d62de4b0f6b392c837b2e8d8071bf5b444d89ae1284e63701617123482ad5b42f6421497906f3698a41ba21ba3c4d13cb93e7b076a8946734edc504459d96f399f6057d5dbf9c052176660e046eaaee08820e0d93d60b6ea8869619b624af62c1a44300c98c7ba43f87f7efa9aa5974e6976ccd87bcf86eba897d17092194434873d5f8416d679ada8988209e0a8d4b01ea6b42c7c6b0e1dae4f202a598764c883da7a08b8be34fc0b68f3e8a71b31727164164616cd1f2f1b68102b81fd7091e136d6066924a53a73ca281a2235f6a85c97264b0bdb1b0c0325d092af62675dc7727fab5c717f813ef1c0f6e3143688156b359ad4a036a5560e0188d0110ecf590076c76db60d06e16fda3ad349c6055346e7b46d0d90089a98d112e01d2b900e2e96dbcb78f11498fcab3319e6cbb274f5ca4b40760a35b08f01667d1b6d078244509ac52ab52588d642bbad7f0d4cf77ee875b41efde5e63460519b3c631093a2c5e4bbb603661bfcf37f4649e120fbae9c689c3f949d8ef0423964e8e9cfc4c4f91bc1b1ecdf5bb9684e74157028ccc34e811909cc055700d2eff7fec371075471c3a105aa2059ba06f80c0700204ad53985cdb1dbcc5e3dd03613a6701ccd3f846e61947762417f0f37c32987d37d35672c68efa290c162e25f7341ddbd553c3cc22d93d3d7915208266ace963f20cd6ba036ffa4800a56804b550628953648e34ce9014e1483791042c02db255f3ae7257f137176c12f142d07818a5693f6b77fbd1de2163fcc2a6426b9cf939e75209d6b4ccd907fbbc1158445dad62229ccd25650c5e667a171c5bf8eea8d978d1e18482583582bb7fd041762ccf63b68385a22c9c436bafd4303427c3474d5a6fbfb2255a6f6f64324196aaf772eb798e04d619b04394fa24aa498b7727b19ecb177e2bda017f63e911088406f76546134baf0afaa6cebf8f48fa51f5a3ba52879c4918d283e42df7a20d657c1817880aeb4e6b865f17405c0dbda88f1395c4702494fd7493e2356ac2bd8ae3f546df7df32a39b80fdd788f77214bf6a9cc247039c25bb62a3d7fc4529cf9e299014cbc51272c64bc57dd105da9e59175da4010fd740ce26ad923a80252538e0b1600f9cacd5a064ec76a75d786b18979abf0aac6d2f41409217cb5b18545164238bf95ad5b9e4dc8dd873eda8ed9c8249a4cfe683994c2cf2e52fae2e9c9043160e2fb95d3ba50c241eae66bcd2087be93ebdb8bff07eaca952887814c4941e6526c93aedd6f448a42aaef54db7d28868e61733f2d89443696071402122081d22e99ae3987a29b82ba82449c4c1f0008ac7aae329eccb08c8efc3f7237a520abce26dd08d0cb616a965cef6b8c2d4d0bec2812ae79f22ca0f6ad2371df00703dfc4b2fa6c18703118956200d582a39c08a4403233d02ffebba68d4213367466936a814a1f9719a4bc6f5a362b14f770ffb2102d8f7c31cb69e4612109d97a432d48f7eb8c3553638c221216d71aafc13cc90ef0a6bf1dc102c446f92cda88a611f26ad05162c7f53932e7a0d6719ef17ce5539b30116d4314f9a1020f4a492f245e4b492308a6c699eae8c08d2b4f24d7e974d5018372279a75ce310286e2947bab5d8bf57ed75939d92236ec5ac53bce82a3de1daea04458d49fae";

contract ZkBallotTest is Test {
    ZkBallot public zkb;
    bytes32[] pubInputsBad = [bytes32(0x0e57fb44adb59385feb5e6d0c72ad05f7e51b44eedb6261d116c64a59d87033d), bytes32(0x0000000000000000000000000000000000000000000000000000000000000000), bytes32(0x0000000000000000000000000000000000000000000000000000000000000001), bytes32(0x22d5fd1e78a9e60115b8252b120f9b0743c56d1508c05666c87ce0fc6f16dd52)];
    bytes32[] pubInputsGood = [bytes32(0x0e47fc44adb59385feb5e6d0c72ad05f7e51b44eedb6261d116c64a59d87033d), bytes32(0x0000000000000000000000000000000000000000000000000000000000000000), bytes32(0x0000000000000000000000000000000000000000000000000000000000000001), bytes32(0x22d5fd1e78a9e60115b8252b120f9b0743c56d1508c05666c87ce0fc6f16dd52)];

    function setUp() public {
        zkb = new ZkBallot();
	zkb.createElection('First Election', 1, 0, pubInputsGood[0], "0x0000000");
    }

    function testProofGood() public {
        bool test = zkb.verifyProof(proof, pubInputsGood);
        assertTrue(test);
    }

    function testProofBad() public {
        bool test = zkb.verifyProof(proof, pubInputsBad);
        assertTrue(test);
    }

}
